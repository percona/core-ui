{
  "extends": ["react-app", "airbnb", "prettier"],
  "env": {
    "jest/globals": true,
    "browser": true
  },
  "root": true,
  "settings": {
    "react": {
      "version": "16.12.0"
    },
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx"]
      }
    }
  },
  "plugins": ["react-hooks", "jest", "eslint-plugin-no-inline-styles"],
  "rules": {
    "no-console": ["warn", {"allow": ["warn", "error"]}],
    "semi": [
      "error",
      "always"
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    // this is a dup of @typescript-eslint/no-unused-vars
    "no-unused-vars": ["off"],
    "no-restricted-imports": ["off"],
    "no-param-reassign": ["error", { "ignorePropertyModificationsForRegex": ["^acc$"] }],
    "react/react-in-jsx-scope": ["off"],
    "react/jsx-curly-brace-presence": ["error"],
    "react/jsx-boolean-value": ["error"],
    "react/jsx-filename-extension": ["off"],
    // We need spread to create HOCs
    "react/jsx-props-no-spreading": ["off"],
    "react/prop-types": ["off"],
    "react/display-name": ["off"],
    "react/require-default-props": ["off"],
    "max-len": [
      "error", 
      { 
        "code": 110, 
        "ignoreStrings": true, 
        "ignoreRegExpLiterals": true, 
        "ignoreComments": true, 
        "ignoreUrls": true 
      }
    ],
    "prettier/prettier": ["off"],
    "quotes": ["error", "single"],
    "import/extensions": ["off"],
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": true, "optionalDependencies": false, "peerDependencies": true }
    ],
    "import/prefer-default-export": ["off"],
    "import/no-unresolved": ["off"],
    "@typescript-eslint/no-unused-vars": ["error"],
    // It's more convinient to declare helper functions below the main method
    "no-use-before-define": ["off"],
    // Don't need these
    "jsx-a11y": ["off"],
    "jsx-a11y/anchor-is-valid": ["off"],
    "jsx-a11y/click-events-have-key-events": ["off"],
    "jsx-a11y/no-static-element-interactions": ["off"],
    "jsx-a11y/no-noninteractive-element-interactions": ["error"],
    "jsx-a11y/label-has-associated-control": ["error"],
    "no-dupe-args": ["error"],
    "no-new-object": ["error"],
    // "no-magic-numbers": ["error"],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "import", "next": "*" },
      { "blankLine": "any", "prev": "import", "next": "import" },
      { "blankLine": "always", "prev": "function", "next": "*" },
      { "blankLine": "always", "prev": "if", "next": "*" },
      { "blankLine": "always", "prev": "for", "next": "*" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] }
    ],
    // "no-inline-styles/no-inline-styles": ["error"],
    "no-shadow": ["error"],
    "react/no-array-index-key": ["error"],
    "no-unused-expressions": ["error"]
  }
}
