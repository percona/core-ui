{"version":3,"file":"index.development.js","sources":["../src/selectors/components.ts","../src/selectors/pages.ts","../src/selectors/index.ts"],"sourcesContent":["// NOTE: by default Component string selectors are set up to be aria-labels,\n// however there are many cases where your component may not need an aria-label\n// (a <button> with clear text, for example, does not need an aria-label as it's already labeled)\n// but you still might need to select it for testing,\n// in that case please add the attribute data-test-id={selector} in the component and\n// prefix your selector string with 'data-test-id' so that when create the selectors we know to search for it on the right attribute\n/**\n * Selectors grouped/defined in Components\n *\n * @alpha\n */\nexport const Components = {\n  TimePicker: {\n    openButton: 'data-testid TimePicker Open Button',\n    fromField: 'Time Range from field',\n    toField: 'Time Range to field',\n    applyTimeRange: 'data-testid TimePicker submit button',\n    calendar: {\n      label: 'Time Range calendar',\n      openButton: 'Open time range calendar',\n      closeButton: 'Close time range Calendar',\n    },\n    absoluteTimeRangeTitle: 'data-testid-absolute-time-range-narrow',\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value',\n      },\n    },\n    Jaeger: {\n      traceIDInput: 'Trace ID',\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: 'Add exemplar config button',\n        internalLinkSwitch: 'Internal link switch',\n      },\n      exemplarMarker: 'Exemplar marker',\n    },\n  },\n  Menu: {\n    MenuComponent: (title: string) => `${title} menu`,\n    MenuGroup: (title: string) => `${title} menu group`,\n    MenuItem: (title: string) => `${title} menu item`,\n    SubMenu: {\n      container: 'SubMenu container',\n      icon: 'SubMenu icon',\n    },\n  },\n  Panels: {\n    Panel: {\n      title: (title: string) => `data-testid Panel header ${title}`,\n      headerItems: (item: string) => `Panel header item ${item}`,\n      containerByTitle: (title: string) => `${title} panel`,\n      headerCornerInfo: (mode: string) => `Panel header ${mode}`,\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section',\n        },\n        Legend: {\n          legendItemAlias: (name: string) => `gpl alias ${name}`,\n          showLegendSwitch: 'gpl show legend',\n        },\n        xAxis: {\n          labels: () => 'div.flot-x-axis > div.flot-tick-label',\n        },\n      },\n      BarGauge: {\n        /**\n         * @deprecated use valueV2 from Grafana 8.3 instead\n         */\n        value: 'Bar gauge value',\n        valueV2: 'data-testid Bar gauge value',\n      },\n      PieChart: {\n        svgSlice: 'Pie Chart Slice',\n      },\n      Text: {\n        container: () => '.markdown-html',\n      },\n      Table: {\n        header: 'table header',\n        footer: 'table-footer',\n      },\n    },\n  },\n  VizLegend: {\n    seriesName: (name: string) => `VizLegend series ${name}`,\n  },\n  Drawer: {\n    General: {\n      title: (title: string) => `Drawer title ${title}`,\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: () => '.drawer-content-wrapper',\n    },\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content',\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      select: 'Panel editor option pane select',\n      fieldLabel: (type: string) => `${type} field property editor`,\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content',\n    },\n    applyButton: 'panel editor apply',\n    toggleVizPicker: 'toggle-viz-picker',\n    toggleVizOptions: 'toggle-viz-options',\n    toggleTableView: 'toggle-table-view',\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content',\n    },\n    Stats: {\n      content: 'Panel inspector Stats content',\n    },\n    Json: {\n      content: 'Panel inspector Json content',\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: () => '.json-formatter-key',\n    },\n  },\n  Tab: {\n    title: (title: string) => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]',\n  },\n  RefreshPicker: {\n    /**\n     * @deprecated use runButtonV2 from Grafana 8.3 instead\n     */\n    runButton: 'RefreshPicker run button',\n    /**\n     * @deprecated use intervalButtonV2 from Grafana 8.3 instead\n     */\n    intervalButton: 'RefreshPicker interval button',\n    runButtonV2: 'data-testid RefreshPicker run button',\n    intervalButtonV2: 'data-testid RefreshPicker interval button',\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    addQuery: 'Query editor add query button',\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row',\n  },\n  QueryEditorRow: {\n    actionButton: (title: string) => `${title} query operation action`,\n    title: (refId: string) => `Query editor row title ${refId}`,\n  },\n  AlertTab: {\n    content: 'Alert editor tab content',\n  },\n  Alert: {\n    /**\n     * @deprecated use alertV2 from Grafana 8.3 instead\n     */\n    alert: (severity: string) => `Alert ${severity}`,\n    alertV2: (severity: string) => `data-testid Alert ${severity}`,\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: (name: string) => `New transform ${name}`,\n    transformationEditor: (name: string) => `Transformation editor ${name}`,\n    transformationEditorDebugger: (name: string) => `Transformation editor debugger ${name}`,\n  },\n  Transforms: {\n    card: (name: string) => `New transform ${name}`,\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label',\n    },\n    searchInput: 'search transformations',\n  },\n  PageToolbar: {\n    container: () => '.page-toolbar',\n    item: (tooltip: string) => `${tooltip}`,\n  },\n  QueryEditorToolbarItem: {\n    button: (title: string) => `QueryEditor toolbar item button ${title}`,\n  },\n  BackButton: {\n    backArrow: 'Go Back',\n  },\n  OptionsGroup: {\n    group: (title?: string) => (title ? `Options group ${title}` : 'Options group'),\n    toggle: (title?: string) => (title ? `Options group ${title} toggle` : 'Options group toggle'),\n  },\n  PluginVisualization: {\n    item: (title: string) => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]',\n  },\n  Select: {\n    option: 'Select option',\n    input: () => 'input[id*=\"time-options-input\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]',\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content',\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content',\n  },\n  FolderPicker: {\n    /**\n     * @deprecated use containerV2 from Grafana 8.3 instead\n     */\n    container: 'Folder picker select container',\n    containerV2: 'data-testid Folder picker select container',\n    input: 'Select a folder',\n  },\n  ReadonlyFolderPicker: {\n    container: 'data-testid Readonly folder picker select container',\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container',\n    /**\n     * @deprecated use inputV2 instead\n     */\n    input: () => 'input[id=\"data-source-picker\"]',\n    inputV2: 'Select a data source',\n  },\n  TimeZonePicker: {\n    /**\n     * @deprecated use TimeZonePicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Time zone picker select container',\n    containerV2: 'data-testid Time zone picker select container',\n  },\n  WeekStartPicker: {\n    /**\n     * @deprecated use WeekStartPicker.containerV2 from Grafana 8.3 instead\n     */\n    container: 'Choose starting day of the week',\n    containerV2: 'data-testid Choose starting day of the week',\n    placeholder: 'Choose starting day of the week',\n  },\n  TraceViewer: {\n    spanBar: () => '[data-test-id=\"SpanBar--wrapper\"]',\n  },\n  QueryField: { container: 'Query field' },\n  ValuePicker: {\n    button: (name: string) => `Value picker button ${name}`,\n    select: (name: string) => `Value picker select ${name}`,\n  },\n  Search: {\n    /**\n     * @deprecated use sectionV2 from Grafana 8.3 instead\n     */\n    section: 'Search section',\n    sectionV2: 'data-testid Search section',\n    /**\n     * @deprecated use itemsV2 from Grafana 8.3 instead\n     */\n    items: 'Search items',\n    itemsV2: 'data-testid Search items',\n    collapseFolder: (sectionId: string) => `data-testid Collapse folder ${sectionId}`,\n    expandFolder: (sectionId: string) => `data-testid Expand folder ${sectionId}`,\n    dashboardItem: (item: string) => `${Components.Search.dashboardItems} ${item}`,\n    dashboardItems: 'data-testid Dashboard search item',\n  },\n  DashboardLinks: {\n    container: 'data-testid Dashboard link container',\n    dropDown: 'data-testid Dashboard link dropdown',\n    link: 'data-testid Dashboard link',\n  },\n  LoadingIndicator: {\n    icon: 'Loading indicator',\n  },\n  CallToActionCard: {\n    /**\n     * @deprecated use buttonV2 from Grafana 8.3 instead\n     */\n    button: (name: string) => `Call to action button ${name}`,\n    buttonV2: (name: string) => `data-testid Call to action button ${name}`,\n  },\n  DataLinksContextMenu: {\n    singleLink: 'Data link',\n  },\n  CodeEditor: {\n    container: 'Code editor container',\n  },\n  DashboardImportPage: {\n    textarea: 'data-testid-import-dashboard-textarea',\n    submit: 'data-testid-load-dashboard',\n  },\n  ImportDashboardForm: {\n    name: 'data-testid-import-dashboard-title',\n    submit: 'data-testid-import-dashboard-submit',\n  },\n  PanelAlertTabContent: {\n    content: 'Unified alert editor tab content',\n  },\n  VisualizationPreview: {\n    card: (name: string) => `data-testid suggestion-${name}`,\n  },\n};\n","import { Components } from './components';\n\n/**\n * Selectors grouped/defined in Pages\n *\n * @alpha\n */\nexport const Pages = {\n  Login: {\n    url: '/login',\n    username: 'Username input field',\n    password: 'Password input field',\n    submit: 'Login button',\n    skip: 'Skip change password button',\n  },\n  Home: {\n    url: '/',\n  },\n  DataSource: {\n    name: 'Data source settings page name input field',\n    delete: 'Data source settings page Delete button',\n    readOnly: 'Data source settings page read only message',\n    saveAndTest: 'Data source settings page Save and Test button',\n    alert: 'Data source settings page Alert',\n  },\n  DataSources: {\n    url: '/datasources',\n    dataSources: (dataSourceName: string) => `Data source list item ${dataSourceName}`,\n  },\n  AddDataSource: {\n    url: '/datasources/new',\n    dataSourcePlugins: (pluginName: string) => `Data source plugin item ${pluginName}`,\n  },\n  ConfirmModal: {\n    delete: 'Confirm Modal Danger Button',\n  },\n  AddDashboard: {\n    url: '/dashboard/new',\n    addNewPanel: 'Add new panel',\n    addNewRow: 'Add new row',\n    addNewPanelLibrary: 'Add new panel from panel library',\n  },\n  Dashboard: {\n    url: (uid: string) => `/d/${uid}`,\n    DashNav: {\n      /**\n       * @deprecated use navV2 from Grafana 8.3 instead\n       */\n      nav: 'Dashboard navigation',\n      navV2: 'data-testid Dashboard navigation',\n    },\n    SubMenu: {\n      submenu: 'Dashboard submenu',\n      submenuItem: 'data-testid template variable',\n      submenuItemLabels: (item: string) => `data-testid Dashboard template variables submenu Label ${item}`,\n      submenuItemValueDropDownValueLinkTexts: (item: string) =>\n        `data-testid Dashboard template variables Variable Value DropDown value link text ${item}`,\n      submenuItemValueDropDownDropDown: 'Variable options',\n      submenuItemValueDropDownOptionTexts: (item: string) =>\n        `data-testid Dashboard template variables Variable Value DropDown option text ${item}`,\n    },\n    Settings: {\n      General: {\n        deleteDashBoard: 'Dashboard settings page delete dashboard button',\n        sectionItems: (item: string) => `Dashboard settings section item ${item}`,\n        saveDashBoard: 'Dashboard settings aside actions Save button',\n        saveAsDashBoard: 'Dashboard settings aside actions Save As button',\n        /**\n         * @deprecated use components.TimeZonePicker.containerV2 from Grafana 8.3 instead\n         */\n        timezone: 'Time zone picker select container',\n        title: 'Dashboard settings page title',\n      },\n      Annotations: {\n        List: {\n          /**\n           * @deprecated use addAnnotationCTAV2 from Grafana 8.3 instead\n           */\n          addAnnotationCTA: Components.CallToActionCard.button('Add annotation query'),\n          addAnnotationCTAV2: Components.CallToActionCard.buttonV2('Add annotation query'),\n        },\n        Settings: {\n          name: 'Annotations settings name input',\n        },\n      },\n      Variables: {\n        List: {\n          /**\n           * @deprecated use addVariableCTAV2 from Grafana 8.3 instead\n           */\n          addVariableCTA: Components.CallToActionCard.button('Add variable'),\n          addVariableCTAV2: Components.CallToActionCard.buttonV2('Add variable'),\n          newButton: 'Variable editor New variable button',\n          table: 'Variable editor Table',\n          tableRowNameFields: (variableName: string) => `Variable editor Table Name field ${variableName}`,\n          tableRowDefinitionFields: (variableName: string) => `Variable editor Table Definition field ${variableName}`,\n          tableRowArrowUpButtons: (variableName: string) => `Variable editor Table ArrowUp button ${variableName}`,\n          tableRowArrowDownButtons: (variableName: string) => `Variable editor Table ArrowDown button ${variableName}`,\n          tableRowDuplicateButtons: (variableName: string) => `Variable editor Table Duplicate button ${variableName}`,\n          tableRowRemoveButtons: (variableName: string) => `Variable editor Table Remove button ${variableName}`,\n        },\n        Edit: {\n          General: {\n            headerLink: 'Variable editor Header link',\n            modeLabelNew: 'Variable editor Header mode New',\n            /**\n             * @deprecated\n             */\n            modeLabelEdit: 'Variable editor Header mode Edit',\n            generalNameInput: 'Variable editor Form Name field',\n            generalTypeSelect: 'Variable editor Form Type select',\n            generalLabelInput: 'Variable editor Form Label field',\n            generalHideSelect: 'Variable editor Form Hide select',\n            selectionOptionsMultiSwitch: 'Variable editor Form Multi switch',\n            selectionOptionsIncludeAllSwitch: 'Variable editor Form IncludeAll switch',\n            selectionOptionsCustomAllInput: 'Variable editor Form IncludeAll field',\n            previewOfValuesOption: 'Variable editor Preview of Values option',\n            submitButton: 'Variable editor Submit button',\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: Components.DataSourcePicker.container,\n            queryOptionsRefreshSelect: 'Variable editor Form Query Refresh select',\n            queryOptionsRegExInput: 'Variable editor Form Query RegEx field',\n            queryOptionsSortSelect: 'Variable editor Form Query Sort select',\n            queryOptionsQueryInput: 'Variable editor Form Default Variable Query Editor textarea',\n            valueGroupsTagsEnabledSwitch: 'Variable editor Form Query UseTags switch',\n            valueGroupsTagsTagsQueryInput: 'Variable editor Form Query TagsQuery field',\n            valueGroupsTagsTagsValuesQueryInput: 'Variable editor Form Query TagsValuesQuery field',\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: 'Variable editor Form Constant Query field',\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: 'Variable editor Form TextBox Query field',\n          },\n        },\n      },\n    },\n  },\n  Dashboards: {\n    url: '/dashboards',\n    /**\n     * @deprecated use components.Search.dashboardItem from Grafana 8.3 instead\n     */\n    dashboards: (title: string) => `Dashboard search item ${title}`,\n  },\n  SaveDashboardAsModal: {\n    newName: 'Save dashboard title field',\n    save: 'Save dashboard button',\n  },\n  SaveDashboardModal: {\n    save: 'Dashboard settings Save Dashboard Modal Save button',\n    saveVariables: 'Dashboard settings Save Dashboard Modal Save variables checkbox',\n    saveTimerange: 'Dashboard settings Save Dashboard Modal Save timerange checkbox',\n  },\n  SharePanelModal: {\n    linkToRenderedImage: 'Link to rendered image',\n  },\n  Explore: {\n    url: '/explore',\n    General: {\n      container: 'data-testid Explore',\n      graph: 'Explore Graph',\n      table: 'Explore Table',\n      scrollBar: () => '.scrollbar-view',\n    },\n  },\n  SoloPanel: {\n    url: (page: string) => `/d-solo/${page}`,\n  },\n  PluginsList: {\n    page: 'Plugins list page',\n    list: 'Plugins list',\n    listItem: 'Plugins list item',\n    signatureErrorNotice: 'Unsigned plugins notice',\n  },\n  PluginPage: {\n    page: 'Plugin page',\n    signatureInfo: 'Plugin signature info',\n    disabledInfo: 'Plugin disabled info',\n  },\n  PlaylistForm: {\n    name: 'Playlist name',\n    interval: 'Playlist interval',\n    itemRow: 'Playlist item row',\n    itemIdType: 'Playlist item dashboard by ID type',\n    itemTagType: 'Playlist item dashboard by Tag type',\n    itemMoveUp: 'Move playlist item order up',\n    itemMoveDown: 'Move playlist item order down',\n    itemDelete: 'Delete playlist item',\n  },\n};\n","import { Pages } from './pages';\nimport { Components } from './components';\nimport { E2ESelectors } from '../types';\n\n/**\n * Exposes selectors in package for easy use in e2e tests and in production code\n *\n * @alpha\n */\nexport const selectors: { pages: E2ESelectors<typeof Pages>; components: E2ESelectors<typeof Components> } = {\n  pages: Pages,\n  components: Components,\n};\n\n/**\n * Exposes Pages, Component selectors and E2ESelectors type in package for easy use in e2e tests and in production code\n *\n * @alpha\n */\nexport { Pages, Components, E2ESelectors };\n"],"names":[],"mappings":"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"}