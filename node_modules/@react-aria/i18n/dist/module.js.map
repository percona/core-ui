{"mappings":";;;;;;;AAAA;;;;;;;;;;;AAYA;AACA,MAAMA,6CAAW,GAAG,IAAIC,GAAJ,CAAQ,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,CAAR,CAApB;AACA,MAAMC,2CAAS,GAAG,IAAID,GAAJ,CAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,KAArD,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,KAAxE,EAA+E,KAA/E,EAAsF,KAAtF,EAA6F,IAA7F,EAAmG,IAAnG,EAAyG,IAAzG,EAA+G,IAA/G,EAAqH,IAArH,CAAR,CAAlB;AAEA;;;;AAGO,SAASE,0CAAT,CAAeC,MAAf,EAA+B;AACpC;AACA;AACA;AACA,MAAIC,IAAI,CAACC,MAAT,EAAiB;AACf;AACA,QAAIC,MAAM,GAAG,IAAIF,IAAI,CAACC,MAAT,CAAgBF,MAAhB,EAAwBI,QAAxB,GAAmCD,MAAhD;AACA,WAAOP,6CAAW,CAACS,GAAZ,CAAgBF,MAAhB,CAAP;AACD,GARmC,CAUpC;;;AACA,MAAIG,IAAI,GAAGN,MAAM,CAACO,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX;AACA,SAAOT,2CAAS,CAACO,GAAV,CAAcC,IAAd,CAAP;AACD;;ACRD;;;AAGO,SAASE,uDAAT,GAAoC;AACzC;AACA,MAAIR,MAAM,GAAI,OAAOS,SAAP,KAAqB,WAArB,KAAqCA,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACE,YAArE,CAAD,IAAwF,OAArG;AACA,SAAO;AACLX,IAAAA,MADK;AAELY,IAAAA,SAAS,EAAE,2CAAMZ,MAAN,IAAgB,KAAhB,GAAwB;AAF9B,GAAP;AAID;;AAED,IAAIa,iDAAa,GAAGL,uDAAgB,EAApC;AACA,IAAIM,6CAAS,GAAG,IAAIjB,GAAJ,EAAhB;;AAEA,SAASkB,gDAAT,GAAwB;AACtBF,EAAAA,iDAAa,GAAGL,uDAAgB,EAAhC;;AACA,OAAK,IAAIQ,QAAT,IAAqBF,6CAArB,EAAgC;AAC9BE,IAAAA,QAAQ,CAACH,iDAAD,CAAR;AACD;AACF;AAED;;;;;AAGO,SAASI,uDAAT,GAAoC;AACzC,MAAIC,KAAK,GAAGC,QAAQ,EAApB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAACT,iDAAD,CAAhD;AAEAU,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIT,6CAAS,CAACU,IAAV,KAAmB,CAAvB,EAA0B;AACxBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAA0CX,gDAA1C;AACD;;AAEDD,IAAAA,6CAAS,CAACa,GAAV,CAAcN,gBAAd;AAEA,WAAO,MAAM;AACXP,MAAAA,6CAAS,CAACc,MAAV,CAAiBP,gBAAjB;;AACA,UAAIP,6CAAS,CAACU,IAAV,KAAmB,CAAvB,EAA0B;AACxBC,QAAAA,MAAM,CAACI,mBAAP,CAA2B,gBAA3B,EAA6Cd,gDAA7C;AACD;AACF,KALD;AAMD,GAbQ,EAaN,EAbM,CAAT,CAJyC,CAmBzC;AACA;;AACA,MAAIG,KAAJ,EAAW;AACT,WAAO;AACLlB,MAAAA,MAAM,EAAE,OADH;AAELY,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AAED,SAAOQ,aAAP;AACD;;ACvDD,MAAMU,8CAAW,gBAAGC,MAAK,CAACC,aAAN,CAA4B,IAA5B,CAApB;;OAKO,SAASC,YAAT,CAAsBC,KAAtB,EAA4C;AACjD,MAAI;AAAClC,IAAAA,MAAD;AAASmC,IAAAA;AAAT,MAAqBD,KAAzB;AACA,MAAId,aAAa,GAAG,yDAApB;AAEA,MAAIgB,KAAa,GAAGpC,MAAM,GAAG;AAC3BA,IAAAA,MAD2B;AAE3BY,IAAAA,SAAS,EAAE,2CAAMZ,MAAN,IAAgB,KAAhB,GAAwB;AAFR,GAAH,GAGtBoB,aAHJ;AAKA,sBACE,qBAAC,8CAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEgB;AAA7B,KACGD,QADH,CADF;AAKD;AAED;;;;OAGO,SAASE,SAAT,GAA6B;AAClC,MAAIjB,aAAa,GAAG,yDAApB;AACA,MAAIkB,OAAO,GAAGC,UAAU,CAACT,8CAAD,CAAxB;AACA,SAAOQ,OAAO,IAAIlB,aAAlB;AACD;ACjCD,MAAMoB,yCAAK,GAAG,IAAIC,OAAJ,EAAd;;AACA,SAASC,uDAAT,CAA6BC,OAA7B,EAAwD;AACtD,MAAIC,UAAU,GAAGJ,yCAAK,CAACK,GAAN,CAAUF,OAAV,CAAjB;;AACA,MAAI,CAACC,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAG,IAAIE,iBAAJ,CAAsBH,OAAtB,CAAb;AACAH,IAAAA,yCAAK,CAACO,GAAN,CAAUJ,OAAV,EAAmBC,UAAnB;AACD;;AAED,SAAOA,UAAP;AACD;AAED;;;;;;;OAKO,SAASI,mBAAT,CAA6BL,OAA7B,EAAuE;AAC5E,MAAI;AAAC3C,IAAAA;AAAD,MAAW,WAAf;AACA,MAAI4C,UAAU,GAAGK,OAAO,CAAC,MAAMP,uDAAmB,CAACC,OAAD,CAA1B,EAAqC,CAACA,OAAD,CAArC,CAAxB;AACA,MAAIO,SAAS,GAAGD,OAAO,CAAC,MAAM,IAAIE,gBAAJ,CAAqBnD,MAArB,EAA6B4C,UAA7B,CAAP,EAAiD,CAAC5C,MAAD,EAAS4C,UAAT,CAAjD,CAAvB;AACA,SAAOQ,WAAW,CAAC,CAACC,GAAD,EAAMC,SAAN,KAAoBJ,SAAS,CAACK,MAAV,CAAiBF,GAAjB,EAAsBC,SAAtB,CAArB,EAAuD,CAACJ,SAAD,CAAvD,CAAlB;AACD;;ACnBD;;;;;OAKO,SAASM,gBAAT,CAA0BC,OAA1B,EAAyE;AAC9E;AACA,MAAIC,WAAW,GAAGC,MAAM,CAAC,IAAD,CAAxB;;AACA,MAAIF,OAAO,IAAIC,WAAW,CAACE,OAAvB,IAAkCC,4CAAO,CAACJ,OAAD,EAAUC,WAAW,CAACE,OAAtB,CAA7C,EAA6E;AAC3EH,IAAAA,OAAO,GAAGC,WAAW,CAACE,OAAtB;AACD;;AAEDF,EAAAA,WAAW,CAACE,OAAZ,GAAsBH,OAAtB;AAEA,MAAI;AAACzD,IAAAA;AAAD,MAAW,WAAf;AACA,SAAOiD,OAAO,CAAC,MAAM,IAAIa,aAAJ,CAAkB9D,MAAlB,EAA0ByD,OAA1B,CAAP,EAA2C,CAACzD,MAAD,EAASyD,OAAT,CAA3C,CAAd;AACD;;AAED,SAASI,4CAAT,CAAiBE,CAAjB,EAA0CC,CAA1C,EAAmE;AACjE,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAZ;AACA,MAAIK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAZ;;AACA,MAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED,OAAK,IAAIhB,GAAT,IAAgBY,KAAhB,EAAuB;AACrB,QAAID,CAAC,CAACX,GAAD,CAAD,KAAWU,CAAC,CAACV,GAAD,CAAhB,EAAuB;AACrB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;ACxCD;;;;;OAKO,SAASiB,kBAAT,CAA4Bb,OAA5B,EAAkF;AAAA,MAAtDA,OAAsD;AAAtDA,IAAAA,OAAsD,GAAvB,EAAuB;AAAA;;AACvF,MAAI;AAACzD,IAAAA;AAAD,MAAW,WAAf;AACA,SAAOiD,OAAO,CAAC,MAAM,IAAIsB,eAAJ,CAAoBvE,MAApB,EAA4ByD,OAA5B,CAAP,EAA6C,CAACzD,MAAD,EAASyD,OAAT,CAA7C,CAAd;AACD;ACVD,IAAIjB,wCAAK,GAAG,IAAIgC,GAAJ,EAAZ;AAEA;;;;;;OAKO,SAASC,WAAT,CAAqBhB,OAArB,EAAoE;AACzE,MAAI;AAACzD,IAAAA;AAAD,MAAW,WAAf;AAEA,MAAI0E,QAAQ,GAAG1E,MAAM,IAAIyD,OAAO,GAAGS,MAAM,CAACS,OAAP,CAAelB,OAAf,EAAwBmB,IAAxB,CAA6B,CAACb,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAR,GAAc,CAAC,CAAf,GAAmB,CAA1D,EAA6Da,IAA7D,EAAH,GAAyE,EAApF,CAArB;;AACA,MAAIrC,wCAAK,CAACnC,GAAN,CAAUqE,QAAV,CAAJ,EAAyB;AACvB,WAAOlC,wCAAK,CAACK,GAAN,CAAU6B,QAAV,CAAP;AACD;;AAED,MAAIxB,SAAS,GAAG,IAAIjD,IAAI,CAAC6E,QAAT,CAAkB9E,MAAlB,EAA0ByD,OAA1B,CAAhB;AACAjB,EAAAA,wCAAK,CAACO,GAAN,CAAU2B,QAAV,EAAoBxB,SAApB;AACA,SAAOA,SAAP;AACD;;ACTD;;;;OAIO,SAAS6B,SAAT,CAAmBtB,OAAnB,EAA2D;AAChE,MAAIuB,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAE;AADM,KAEVxB,OAFU,EAAf,CADgE,CAMhE;;AAEA,SAAO;AACLyB,IAAAA,UAAU,CAACC,MAAD,EAASC,SAAT,EAAoB;AAC5B,UAAIA,SAAS,CAACf,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAP;AACD,OAH2B,CAK5B;AACA;;;AACAc,MAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,KAAjB,CAAT;AACAD,MAAAA,SAAS,GAAGA,SAAS,CAACC,SAAV,CAAoB,KAApB,CAAZ;AACA,aAAOL,QAAQ,CAACM,OAAT,CAAiBH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBH,SAAS,CAACf,MAA1B,CAAjB,EAAoDe,SAApD,MAAmE,CAA1E;AACD,KAXI;;AAYLI,IAAAA,QAAQ,CAACL,MAAD,EAASC,SAAT,EAAoB;AAC1B,UAAIA,SAAS,CAACf,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAEDc,MAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,KAAjB,CAAT;AACAD,MAAAA,SAAS,GAAGA,SAAS,CAACC,SAAV,CAAoB,KAApB,CAAZ;AACA,aAAOL,QAAQ,CAACM,OAAT,CAAiBH,MAAM,CAACI,KAAP,CAAa,CAACH,SAAS,CAACf,MAAxB,CAAjB,EAAkDe,SAAlD,MAAiE,CAAxE;AACD,KApBI;;AAqBLK,IAAAA,QAAQ,CAACN,MAAD,EAASC,SAAT,EAAoB;AAC1B,UAAIA,SAAS,CAACf,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAEDc,MAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,KAAjB,CAAT;AACAD,MAAAA,SAAS,GAAGA,SAAS,CAACC,SAAV,CAAoB,KAApB,CAAZ;AAEA,UAAIK,IAAI,GAAG,CAAX;AACA,UAAIC,QAAQ,GAAGP,SAAS,CAACf,MAAzB;;AACA,aAAOqB,IAAI,GAAGC,QAAP,IAAmBR,MAAM,CAACd,MAAjC,EAAyCqB,IAAI,EAA7C,EAAiD;AAC/C,YAAIH,KAAK,GAAGJ,MAAM,CAACI,KAAP,CAAaG,IAAb,EAAmBA,IAAI,GAAGC,QAA1B,CAAZ;;AACA,YAAIX,QAAQ,CAACM,OAAT,CAAiBF,SAAjB,EAA4BG,KAA5B,MAAuC,CAA3C,EAA8C;AAC5C,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;AAvCI,GAAP;AAyCD","sources":["./packages/@react-aria/i18n/src/utils.ts","./packages/@react-aria/i18n/src/useDefaultLocale.ts","./packages/@react-aria/i18n/src/context.tsx","./packages/@react-aria/i18n/src/useMessageFormatter.ts","./packages/@react-aria/i18n/src/useDateFormatter.ts","./packages/@react-aria/i18n/src/useNumberFormatter.ts","./packages/@react-aria/i18n/src/useCollator.ts","./packages/@react-aria/i18n/src/useFilter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\ninterface ProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: ProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedStrings, MessageDictionary, MessageFormatter} from '@internationalized/message';\nimport {useCallback, useMemo} from 'react';\nimport {useLocale} from './context';\n\ntype FormatMessage = (key: string, variables?: {[key: string]: any}) => string;\n\nconst cache = new WeakMap();\nfunction getCachedDictionary(strings: LocalizedStrings) {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n */\nexport function useMessageFormatter(strings: LocalizedStrings): FormatMessage {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  let formatter = useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\ninterface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"names":["RTL_SCRIPTS","Set","RTL_LANGS","isRTL","locale","Intl","Locale","script","maximize","has","lang","split","getDefaultLocale","navigator","language","userLanguage","direction","currentLocale","listeners","updateLocale","listener","useDefaultLocale","isSSR","useIsSSR","defaultLocale","setDefaultLocale","useState","useEffect","size","window","addEventListener","add","delete","removeEventListener","I18nContext","React","createContext","I18nProvider","props","children","value","useLocale","context","useContext","cache","WeakMap","getCachedDictionary","strings","dictionary","get","MessageDictionary","set","useMessageFormatter","useMemo","formatter","MessageFormatter","useCallback","key","variables","format","useDateFormatter","options","lastOptions","useRef","current","isEqual","DateFormatter","a","b","aKeys","Object","keys","bKeys","length","useNumberFormatter","NumberFormatter","Map","useCollator","cacheKey","entries","sort","join","Collator","useFilter","collator","usage","startsWith","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"version":3,"file":"module.js.map"}