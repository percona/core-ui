{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@internationalized/date/src/weekStartData.ts","./packages/@internationalized/date/src/queries.ts","./packages/@internationalized/date/src/utils.ts","./packages/@internationalized/date/src/calendars/GregorianCalendar.ts","./packages/@internationalized/date/src/conversion.ts","./packages/@internationalized/date/src/manipulation.ts","./packages/@internationalized/date/src/string.ts","./packages/@internationalized/date/src/CalendarDate.ts","./packages/@internationalized/date/src/calendars/JapaneseCalendar.ts","./packages/@internationalized/date/src/calendars/BuddhistCalendar.ts","./packages/@internationalized/date/src/calendars/TaiwanCalendar.ts","./packages/@internationalized/date/src/calendars/PersianCalendar.ts","./packages/@internationalized/date/src/calendars/IndianCalendar.ts","./packages/@internationalized/date/src/calendars/IslamicCalendar.ts","./packages/@internationalized/date/src/calendars/HebrewCalendar.ts","./packages/@internationalized/date/src/calendars/EthiopicCalendar.ts","./packages/@internationalized/date/src/createCalendar.ts","./packages/@internationalized/date/src/DateFormatter.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Data from https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/weekData.json\n// Locales starting on Sunday have been removed for compression.\nexport const weekStartData = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AT: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime} from './types';\nimport {CalendarDate, CalendarDateTime, ZonedDateTime} from './CalendarDate';\nimport {fromAbsolute, toAbsolute, toCalendar, toCalendarDate} from './conversion';\nimport {weekStartData} from './weekStartData';\n\ntype DateValue = CalendarDate | CalendarDateTime | ZonedDateTime;\n\nexport function isSameDay(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nexport function isSameMonth(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nexport function isSameYear(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.era === b.era && a.year === b.year;\n}\n\nexport function isEqualDay(a: DateValue, b: DateValue): boolean {\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nexport function isEqualMonth(a: DateValue, b: DateValue): boolean {\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nexport function isEqualYear(a: DateValue, b: DateValue): boolean {\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;\n}\n\nexport function isToday(date: DateValue, timeZone: string): boolean {\n  return isSameDay(date, today(timeZone));\n}\n\nexport function getDayOfWeek(date: DateValue, locale: string) {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1 - getWeekStart(locale)) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  return dayOfWeek;\n}\n\nexport function now(timeZone: string): ZonedDateTime {\n  return fromAbsolute(Date.now(), timeZone);\n}\n\nexport function today(timeZone: string): CalendarDate {\n  return toCalendarDate(now(timeZone));\n}\n\nexport function compareDate(a: AnyCalendarDate, b: AnyCalendarDate): number {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nexport function compareTime(a: AnyTime, b: AnyTime): number {\n  return timeToMs(a) - timeToMs(b);\n}\n\nfunction timeToMs(a: AnyTime): number {\n  return a.hour * 60 * 60 * 1000 + a.minute * 60 * 1000 + a.second * 1000 + a.millisecond;\n}\n\nexport function getHoursInDay(a: CalendarDate, timeZone: string): number {\n  let ms = toAbsolute(a, timeZone);\n  let tomorrow = a.add({days: 1});\n  let tomorrowMs = toAbsolute(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nlet localTimeZone = null;\nexport function getLocalTimeZone(): string {\n  // TODO: invalidate this somehow?\n  if (localTimeZone == null) {\n    localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  return localTimeZone;\n}\n\nexport function startOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function startOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function startOfMonth(date: CalendarDate): CalendarDate;\nexport function startOfMonth(date: DateValue): DateValue;\nexport function startOfMonth(date: DateValue) {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({days: date.day - 1});\n}\n\nexport function endOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function endOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function endOfMonth(date: CalendarDate): CalendarDate;\nexport function endOfMonth(date: DateValue): DateValue;\nexport function endOfMonth(date: DateValue) {\n  return date.add({days: date.calendar.getDaysInMonth(date) - date.day});\n}\n\nexport function startOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function startOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function startOfYear(date: CalendarDate): CalendarDate;\nexport function startOfYear(date: DateValue): DateValue;\nexport function startOfYear(date: DateValue) {\n  return startOfMonth(date.subtract({months: date.month - 1}));\n}\n\nexport function endOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function endOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function endOfYear(date: CalendarDate): CalendarDate;\nexport function endOfYear(date: DateValue): DateValue;\nexport function endOfYear(date: DateValue) {\n  return endOfMonth(date.add({months: date.calendar.getMonthsInYear(date) - date.month}));\n}\n\nexport function getMinimumMonthInYear(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumMonthInYear) {\n    return date.calendar.getMinimumMonthInYear(date);\n  }\n\n  return 1;\n}\n\nexport function getMinimumDayInMonth(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumDayInMonth) {\n    return date.calendar.getMinimumDayInMonth(date);\n  }\n\n  return 1;\n}\n\nexport function startOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function startOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function startOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function startOfWeek(date: DateValue, locale: string): DateValue;\nexport function startOfWeek(date: DateValue, locale: string) {\n  let dayOfWeek = getDayOfWeek(date, locale);\n  return date.subtract({days: dayOfWeek});\n}\n\nexport function endOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function endOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function endOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function endOfWeek(date: DateValue, locale: string) {\n  return startOfWeek(date, locale).add({days: 6});\n}\n\nconst cachedRegions = new Map<string, string>();\n\nfunction getRegion(locale: string) {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    let region = cachedRegions.get(locale);\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      cachedRegions.set(locale, region);\n    }\n    return region;\n  }\n\n  // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n  let part = locale.split('-')[1];\n  return part === 'u' ? null : part;\n}\n\nfunction getWeekStart(locale: string) {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  let region = getRegion(locale);\n  return weekStartData[region] || 0;\n}\n\nexport function getWeeksInMonth(date: DateValue, locale: string) {\n  let days = date.calendar.getDaysInMonth(date);\n  return Math.ceil((getDayOfWeek(startOfMonth(date), locale) + days) / 7);\n}\n\nexport function minDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  return a.compare(b) <= 0 ? a : b;\n}\n\nexport function maxDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  return a.compare(b) >= 0 ? a : b;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, CalendarDateTime} from './CalendarDate';\n\nexport type Mutable<T> = {\n  -readonly[P in keyof T]: T[P]\n};\n\nexport function mod(amount: number, numerator: number): number {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n\nexport function copy(date: CalendarDate): Mutable<CalendarDate> {\n  if (date.era) {\n    return new CalendarDate(date.calendar, date.era, date.year, date.month, date.day);\n  } else {\n    return new CalendarDate(date.calendar, date.year, date.month, date.day);\n  }\n}\n\nexport function copyDateTime(date: CalendarDateTime): Mutable<CalendarDateTime> {\n  if (date.era) {\n    return new CalendarDateTime(date.calendar, date.era, date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n  } else {\n    return new CalendarDateTime(date.calendar, date.year, date.month, date.day, date.hour, date.minute, date.second);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst EPOCH = 1721426; // 001/01/03 Julian C.E.\nexport function gregorianToJulianDay(year: number, month: number, day: number): number {\n  let y1 = year - 1;\n  let monthOffset = -2;\n  if (month <= 2) {\n    monthOffset = 0;\n  } else if (isLeapYear(year)) {\n    monthOffset = -1;\n  }\n\n  return (\n    EPOCH -\n    1 +\n    365 * y1 +\n    Math.floor(y1 / 4) -\n    Math.floor(y1 / 100) +\n    Math.floor(y1 / 400) +\n    Math.floor((367 * month - 362) / 12 + monthOffset + day)\n  );\n}\n\nexport function isLeapYear(year: number): boolean {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nconst daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\nexport class GregorianCalendar implements Calendar {\n  identifier = 'gregory';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let jd0 = jd;\n    let depoch = jd0 - EPOCH;\n    let quadricent = Math.floor(depoch / 146097);\n    let dqc = mod(depoch, 146097);\n    let cent = Math.floor(dqc / 36524);\n    let dcent = mod(dqc, 36524);\n    let quad = Math.floor(dcent / 1461);\n    let dquad = mod(dcent, 1461);\n    let yindex = Math.floor(dquad / 365);\n\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n    let yearDay = jd0 - gregorianToJulianDay(year, 1, 1);\n    let leapAdj = 2;\n    if (jd0 < gregorianToJulianDay(year, 3, 1)) {\n      leapAdj = 0;\n    } else if (isLeapYear(year)) {\n      leapAdj = 1;\n    }\n    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n    let day = jd0 - gregorianToJulianDay(year, month, 1) + 1;\n\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return gregorianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return daysInMonth[isLeapYear(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 366 : 365;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getYearsInEra(date: AnyCalendarDate): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['BC', 'AD'];\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BC' ? -years : years;\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    if (date.year <= 0) {\n      date.era = date.era === 'BC' ? 'AD' : 'BC';\n      date.year = 1 - date.year;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, AnyDateTime, AnyTime, Calendar, DateFields, Disambiguation, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nexport function epochFromDate(date: AnyDateTime) {\n  date = toCalendar(date, new GregorianCalendar());\n  return epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction epochFromParts(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number) {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  let date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nexport function getTimeZoneOffset(ms: number, timeZone: string) {\n  // Fast path: for local timezone, use native Date.\n  if (timeZone === getLocalTimeZone()) {\n    return new Date(ms).getTimezoneOffset() * -60 * 1000;\n  }\n\n  let {year, month, day, hour, minute, second} = getTimeZoneParts(ms, timeZone);\n  let utc = epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nconst formattersByTimeZone = new Map<string, Intl.DateTimeFormat>();\n\nfunction getTimeZoneParts(ms: number, timeZone: string) {\n  let formatter = formattersByTimeZone.get(timeZone);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n\n    formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  let parts = formatter.formatToParts(new Date(ms));\n  let namedParts: {[name: string]: string} = {};\n  for (let part of parts) {\n    if (part.type !== 'literal') {\n      namedParts[part.type] = part.value;\n    }\n  }\n\n  return {\n    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour, // bugs.chromium.org/p/chromium/issues/detail?id=1045791\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nconst DAYMILLIS = 86400000;\n\nexport function possibleAbsolutes(date: CalendarDateTime, timeZone: string): number[] {\n  let ms = epochFromDate(date);\n  let earlier = ms - getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let later = ms - getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  return getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction getValidWallTimes(date: CalendarDateTime, timeZone: string, earlier: number, later: number): number[] {\n  let found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(absolute => isValidWallTime(date, timeZone, absolute));\n}\n\nfunction isValidWallTime(date: CalendarDateTime, timeZone: string, absolute: number) {\n  let parts = getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year\n    && date.month === parts.month\n    && date.day === parts.day\n    && date.hour === parts.hour\n    && date.minute === parts.minute\n    && date.second === parts.second;\n}\n\nexport function toAbsolute(date: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): number {\n  let dateTime = toCalendarDateTime(date);\n\n  // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n  if (timeZone === getLocalTimeZone() && disambiguation === 'compatible') {\n    dateTime = toCalendar(dateTime, new GregorianCalendar());\n\n    // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n    let date = new Date();\n    date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);\n    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n    return date.getTime();\n  }\n\n  let ms = epochFromDate(dateTime);\n  let offsetBefore = getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let offsetAfter = getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  let valid = getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n\n  if (valid.length === 1) {\n    return valid[0];\n  }\n\n  if (valid.length > 1) {\n    switch (disambiguation) {\n      // 'compatible' means 'earlier' for \"fall back\" transitions\n      case 'compatible':\n      case 'earlier':\n        return valid[0];\n      case 'later':\n        return valid[valid.length - 1];\n      case 'reject':\n        throw new RangeError('Multiple possible absolute times found');\n    }\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nexport function toDate(dateTime: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): Date {\n  return new Date(toAbsolute(dateTime, timeZone, disambiguation));\n}\n\nexport function fromAbsolute(ms: number, timeZone: string): ZonedDateTime {\n  let offset = getTimeZoneOffset(ms, timeZone);\n  let date = new Date(ms + offset);\n  let year = date.getUTCFullYear();\n  let month = date.getUTCMonth() + 1;\n  let day = date.getUTCDate();\n  let hour = date.getUTCHours();\n  let minute = date.getUTCMinutes();\n  let second = date.getUTCSeconds();\n  let millisecond = date.getUTCMilliseconds();\n\n  return new ZonedDateTime(year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\nexport function fromDate(date: Date, timeZone: string): ZonedDateTime {\n  return fromAbsolute(date.getTime(), timeZone);\n}\n\nexport function fromDateToLocal(date: Date): ZonedDateTime {\n  return fromDate(date, getLocalTimeZone());\n}\n\nexport function toCalendarDate(dateTime: AnyCalendarDate): CalendarDate {\n  return new CalendarDate(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nexport function toDateFields(date: AnyCalendarDate): DateFields {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nexport function toTimeFields(date: AnyTime): TimeFields {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\nexport function toCalendarDateTime(date: CalendarDate | CalendarDateTime | ZonedDateTime, time?: AnyTime): CalendarDateTime {\n  let hour = 0, minute = 0, second = 0, millisecond = 0;\n  if ('timeZone' in date) {\n    ({hour, minute, second, millisecond} = date);\n  } else if ('hour' in date && !time) {\n    return date;\n  }\n\n  if (time) {\n    ({hour, minute, second, millisecond} = time);\n  }\n\n  return new CalendarDateTime(\n    date.calendar,\n    date.era,\n    date.year,\n    date.month,\n    date.day,\n    hour,\n    minute,\n    second,\n    millisecond\n  );\n}\n\nexport function toTime(dateTime: CalendarDateTime): Time {\n  return new Time(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\nexport function toCalendar<T extends AnyCalendarDate>(date: T, calendar: Calendar): T {\n  if (date.calendar.identifier === calendar.identifier) {\n    return date;\n  }\n\n  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  let copy: Mutable<T> = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  return copy;\n}\n\nexport function toZoned(date: CalendarDate | CalendarDateTime | ZonedDateTime, timeZone: string, disambiguation?: Disambiguation) {\n  if (date instanceof ZonedDateTime) {\n    if (date.timeZone === timeZone) {\n      return date;\n    }\n\n    return toTimeZone(date, timeZone);\n  }\n\n  let ms = toAbsolute(date, timeZone, disambiguation);\n  return fromAbsolute(ms, timeZone);\n}\n\nexport function zonedToDate(date: ZonedDateTime) {\n  let ms = epochFromDate(date) - date.offset;\n  return new Date(ms);\n}\n\nexport function toTimeZone(date: ZonedDateTime, timeZone: string): ZonedDateTime {\n  let ms = epochFromDate(date) - date.offset;\n  return toCalendar(fromAbsolute(ms, timeZone), date.calendar);\n}\n\nexport function toLocalTimeZone(date: ZonedDateTime) {\n  return toTimeZone(date, getLocalTimeZone());\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime, CycleOptions, CycleTimeOptions, DateField, DateFields, Disambiguation, Duration, TimeField, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, toAbsolute, toCalendar, toCalendarDateTime} from './conversion';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst ONE_HOUR = 3600000;\n\nexport function add(date: CalendarDateTime, duration: Duration): CalendarDateTime;\nexport function add(date: CalendarDate, duration: Duration): CalendarDate;\nexport function add(date: CalendarDate | CalendarDateTime, duration: Duration): CalendarDate | CalendarDateTime;\nexport function add(date: CalendarDate | CalendarDateTime, duration: Duration) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n  let days = 'hour' in date ? addTimeFields(date, duration) : 0;\n\n  addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) {\n    mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  }\n\n  mutableDate.month += duration.months || 0;\n\n  balanceYearMonth(mutableDate);\n  constrainMonthDay(mutableDate);\n\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n\n  balanceDay(mutableDate);\n\n  if (mutableDate.calendar.balanceDate) {\n    mutableDate.calendar.balanceDate(mutableDate);\n  }\n\n  return mutableDate;\n}\n\nfunction addYears(date: Mutable<AnyCalendarDate>, years: number) {\n  if (date.calendar.getYearsToAdd) {\n    years = date.calendar.getYearsToAdd(date, years);\n  }\n\n  date.year += years;\n}\n\nfunction balanceYearMonth(date: Mutable<AnyCalendarDate>) {\n  while (date.month < 1) {\n    addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  let monthsInYear = 0;\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    addYears(date, 1);\n  }\n}\n\nfunction balanceDay(date: Mutable<AnyCalendarDate>) {\n  while (date.day < 1) {\n    date.month--;\n    balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    balanceYearMonth(date);\n  }\n}\n\nfunction constrainMonthDay(date: Mutable<AnyCalendarDate>) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nexport function constrain(date: Mutable<AnyCalendarDate>) {\n  if (date.calendar.constrainDate) {\n    date.calendar.constrainDate(date);\n  }\n\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  constrainMonthDay(date);\n}\n\nexport function invertDuration(duration: Duration): Duration {\n  let inverseDuration = {};\n  for (let key in duration) {\n    if (typeof duration[key] === 'number') {\n      inverseDuration[key] = -duration[key];\n    }\n  }\n\n  return inverseDuration;\n}\n\nexport function subtract(date: CalendarDateTime, duration: Duration): CalendarDateTime;\nexport function subtract(date: CalendarDate, duration: Duration): CalendarDate;\nexport function subtract(date: CalendarDate | CalendarDateTime, duration: Duration): CalendarDate | CalendarDateTime {\n  return add(date, invertDuration(duration));\n}\n\nexport function set(date: CalendarDateTime, fields: DateFields): CalendarDateTime;\nexport function set(date: CalendarDate, fields: DateFields): CalendarDate;\nexport function set(date: CalendarDate | CalendarDateTime, fields: DateFields) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n\n  if (fields.era != null) {\n    mutableDate.era = fields.era;\n  }\n\n  if (fields.year != null) {\n    mutableDate.year = fields.year;\n  }\n\n  if (fields.month != null) {\n    mutableDate.month = fields.month;\n  }\n\n  if (fields.day != null) {\n    mutableDate.day = fields.day;\n  }\n\n  constrain(mutableDate);\n  return mutableDate;\n}\n\nexport function setTime(value: CalendarDateTime, fields: TimeFields): CalendarDateTime;\nexport function setTime(value: Time, fields: TimeFields): Time;\nexport function setTime(value: Time | CalendarDateTime, fields: TimeFields) {\n  let mutableValue: Mutable<Time | CalendarDateTime> = value.copy();\n\n  if (fields.hour != null) {\n    mutableValue.hour = fields.hour;\n  }\n\n  if (fields.minute != null) {\n    mutableValue.minute = fields.minute;\n  }\n\n  if (fields.second != null) {\n    mutableValue.second = fields.second;\n  }\n\n  if (fields.millisecond != null) {\n    mutableValue.millisecond = fields.millisecond;\n  }\n\n  constrainTime(mutableValue);\n  return mutableValue;\n}\n\nfunction balanceTime(time: Mutable<AnyTime>): number {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = nonNegativeMod(time.millisecond, 1000);\n\n  time.minute += Math.floor(time.second / 60);\n  time.second = nonNegativeMod(time.second, 60);\n\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = nonNegativeMod(time.minute, 60);\n\n  let days = Math.floor(time.hour / 24);\n  time.hour = nonNegativeMod(time.hour, 24);\n\n  return days;\n}\n\nexport function constrainTime(time: Mutable<AnyTime>) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction nonNegativeMod(a: number, b: number) {\n  let result = a % b;\n  if (result < 0) {\n    result += b;\n  }\n  return result;\n}\n\nfunction addTimeFields(time: Mutable<AnyTime>, duration: Duration): number {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return balanceTime(time);\n}\n\nexport function addTime(time: Time, duration: Duration): Time {\n  let res = time.copy();\n  addTimeFields(res, duration);\n  return res;\n}\n\nexport function subtractTime(time: Time, duration: Duration): Time {\n  return addTime(time, invertDuration(duration));\n}\n\nexport function cycleDate(value: CalendarDateTime, field: DateField, amount: number, options?: CycleOptions): CalendarDateTime;\nexport function cycleDate(value: CalendarDate, field: DateField, amount: number, options?: CycleOptions): CalendarDate;\nexport function cycleDate(value: CalendarDate | CalendarDateTime, field: DateField, amount: number, options?: CycleOptions) {\n  let mutable: Mutable<CalendarDate | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'era': {\n      let eras = value.calendar.getEras();\n      let eraIndex = eras.indexOf(value.era);\n      if (eraIndex < 0) {\n        throw new Error('Invalid era: ' + value.era);\n      }\n      eraIndex = cycleValue(eraIndex, amount, 0, eras.length - 1, options?.round);\n      mutable.era = eras[eraIndex];\n\n      // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n      constrain(mutable);\n      break;\n    }\n    case 'year': {\n      if (mutable.calendar.getYearsToAdd) {\n        amount = mutable.calendar.getYearsToAdd(mutable, amount);\n      }\n\n      // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n      mutable.year = cycleValue(value.year, amount, -Infinity, 9999, options?.round);\n      if (mutable.year === -Infinity) {\n        mutable.year = 1;\n      }\n\n      if (mutable.calendar.balanceYearMonth) {\n        mutable.calendar.balanceYearMonth(mutable, value);\n      }\n      break;\n    }\n    case 'month':\n      mutable.month = cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options?.round);\n      break;\n    case 'day':\n      mutable.day = cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) {\n    value.calendar.balanceDate(mutable);\n  }\n\n  constrain(mutable);\n  return mutable;\n}\n\nexport function cycleTime(value: CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime;\nexport function cycleTime(value: Time, field: TimeField, amount: number, options?: CycleTimeOptions): Time;\nexport function cycleTime(value: Time | CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions) {\n  let mutable: Mutable<Time | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'hour': {\n      let hours = value.hour;\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = hours >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n      mutable.hour = cycleValue(hours, amount, min, max, options?.round);\n      break;\n    }\n    case 'minute':\n      mutable.minute = cycleValue(value.minute, amount, 0, 59, options?.round);\n      break;\n    case 'second':\n      mutable.second = cycleValue(value.second, amount, 0, 59, options?.round);\n      break;\n    case 'millisecond':\n      mutable.millisecond = cycleValue(value.millisecond, amount, 0, 999, options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction cycleValue(value: number, amount: number, min: number, max: number, round = false) {\n  if (round) {\n    value += Math.sign(amount);\n\n    if (value < min) {\n      value = max;\n    }\n\n    let div = Math.abs(amount);\n    if (amount > 0) {\n      value = Math.ceil(value / div) * div;\n    } else {\n      value = Math.floor(value / div) * div;\n    }\n\n    if (value > max) {\n      value = min;\n    }\n  } else {\n    value += amount;\n    if (value < min) {\n      value = max - (min - value - 1);\n    } else if (value > max) {\n      value = min + (value - max - 1);\n    }\n  }\n\n  return value;\n}\n\nexport function addZoned(dateTime: ZonedDateTime, duration: Duration): ZonedDateTime {\n  let ms: number;\n  if ((duration.years != null && duration.years !== 0) || (duration.months != null && duration.months !== 0) || (duration.days != null && duration.days !== 0)) {\n    let res = add(toCalendarDateTime(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      days: duration.days\n    });\n\n    // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n    ms = toAbsolute(res, dateTime.timeZone);\n  } else {\n    // Otherwise, preserve the offset of the original date.\n    ms = epochFromDate(dateTime) - dateTime.offset;\n  }\n\n  // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60 * 1000;\n  ms += (duration.hours || 0) * 60 * 60 * 1000;\n\n  let res = fromAbsolute(ms, dateTime.timeZone);\n  return toCalendar(res, dateTime.calendar);\n}\n\nexport function subtractZoned(dateTime: ZonedDateTime, duration: Duration): ZonedDateTime {\n  return addZoned(dateTime, invertDuration(duration));\n}\n\nexport function cycleZoned(dateTime: ZonedDateTime, field: DateField | TimeField, amount: number, options?: CycleTimeOptions): ZonedDateTime {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour': {\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = dateTime.hour >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n\n      // The minimum and maximum hour may be affected by daylight saving time.\n      // For example, it might jump forward at midnight, and skip 1am.\n      // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n      // the possible absolute times for the min and max, and find the maximum range\n      // that is within the current day.\n      let plainDateTime = toCalendarDateTime(dateTime);\n      let minDate = toCalendar(setTime(plainDateTime, {hour: min}), new GregorianCalendar());\n      let minAbsolute = [toAbsolute(minDate, dateTime.timeZone, 'earlier'), toAbsolute(minDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === minDate.day)[0];\n\n      let maxDate = toCalendar(setTime(plainDateTime, {hour: max}), new GregorianCalendar());\n      let maxAbsolute = [toAbsolute(maxDate, dateTime.timeZone, 'earlier'), toAbsolute(maxDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === maxDate.day).pop();\n\n      // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n      // This is done in hours from the Unix epoch so that cycleValue works correctly,\n      // and then converted back to milliseconds.\n      let ms = epochFromDate(dateTime) - dateTime.offset;\n      let hours = Math.floor(ms / ONE_HOUR);\n      let remainder = ms % ONE_HOUR;\n      ms = cycleValue(\n        hours,\n        amount,\n        Math.floor(minAbsolute / ONE_HOUR),\n        Math.floor(maxAbsolute / ONE_HOUR),\n        options?.round\n      ) * ONE_HOUR + remainder;\n\n      // Now compute the new timezone offset, and convert the absolute time back to local time.\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return cycleTime(dateTime, field, amount, options);\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day': {\n      let res = cycleDate(toCalendarDateTime(dateTime), field, amount, options);\n      let ms = toAbsolute(res, dateTime.timeZone);\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nexport function setZoned(dateTime: ZonedDateTime, fields: DateFields & TimeFields, disambiguation?: Disambiguation): ZonedDateTime {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = toCalendarDateTime(dateTime);\n  let res = setTime(set(plainDateTime, fields), fields);\n\n  // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n  if (res.compare(plainDateTime) === 0) {\n    return dateTime;\n  }\n\n  let ms = toAbsolute(res, dateTime.timeZone, disambiguation);\n  return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyDateTime, Disambiguation} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, possibleAbsolutes, toAbsolute, toCalendar, toCalendarDateTime, toTimeZone} from './conversion';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst DATE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nconst DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst ZONED_DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::(\\d{2}))?)?\\[(.*?)\\]$/;\nconst ABSOLUTE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::(\\d{2}))?)|Z)$/;\n\nexport function parseTime(value: string): Time {\n  let m = value.match(TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 time string: ' + value);\n  }\n\n  return new Time(\n    parseNumber(m[1], 0, 23),\n    m[2] ? parseNumber(m[2], 0, 59) : 0,\n    m[3] ? parseNumber(m[3], 0, 59) : 0,\n    m[4] ? parseNumber(m[4], 0, Infinity) * 1000 : 0\n  );\n}\n\nexport function parseDate(value: string): CalendarDate {\n  let m = value.match(DATE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date string: ' + value);\n  }\n\n  let date: Mutable<CalendarDate> = new CalendarDate(\n    parseNumber(m[1], 0, 9999),\n    parseNumber(m[2], 1, 12),\n    1\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDate;\n}\n\nexport function parseDateTime(value: string): CalendarDateTime {\n  let m = value.match(DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<CalendarDateTime> = new CalendarDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDateTime;\n}\n\nexport function parseZonedDateTime(value: string, disambiguation?: Disambiguation): ZonedDateTime {\n  let m = value.match(ZONED_DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[10],\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  let plainDateTime = toCalendarDateTime(date as ZonedDateTime);\n\n  let ms: number;\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n    ms = epochFromDate(date as ZonedDateTime) - date.offset;\n\n    // Validate offset against parsed date.\n    let absolutes = possibleAbsolutes(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) {\n      throw new Error(`Offset ${offsetToString(date.offset)} is invalid for ${dateTimeToString(date)} in ${date.timeZone}`);\n    }\n  } else {\n    // Convert to absolute and back to fix invalid times due to DST.\n    ms = toAbsolute(toCalendarDateTime(plainDateTime), date.timeZone, disambiguation);\n  }\n\n  return fromAbsolute(ms, date.timeZone);\n}\n\nexport function parseAbsolute(value: string, timeZone: string): ZonedDateTime {\n  let m = value.match(ABSOLUTE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    timeZone,\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n  }\n\n  return toTimeZone(date as ZonedDateTime, timeZone);\n}\n\nexport function parseAbsoluteToLocal(value: string): ZonedDateTime {\n  return parseAbsolute(value, getLocalTimeZone());\n}\n\nfunction parseNumber(value: string, min: number, max: number) {\n  let val = Number(value);\n  if (val < min || val > max) {\n    throw new RangeError(`Value out of range: ${min} <= ${val} <= ${max}`);\n  }\n\n  return val;\n}\n\nexport function timeToString(time: Time): string {\n  return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}${time.millisecond ? String(time.millisecond / 1000).slice(1) : ''}`;\n}\n\nexport function dateToString(date: CalendarDate): string {\n  let gregorianDate = toCalendar(date, new GregorianCalendar());\n  return `${String(gregorianDate.year).padStart(4, '0')}-${String(gregorianDate.month).padStart(2, '0')}-${String(gregorianDate.day).padStart(2, '0')}`;\n}\n\nexport function dateTimeToString(date: AnyDateTime): string {\n  // @ts-ignore\n  return `${dateToString(date)}T${timeToString(date)}`;\n}\n\nfunction offsetToString(offset: number) {\n  let sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  let offsetHours = Math.floor(offset / (60 * 60 * 1000));\n  let offsetMinutes = (offset % (60 * 60 * 1000)) / (60 * 1000);\n  return `${sign}${String(offsetHours).padStart(2, '0')}:${String(offsetMinutes).padStart(2, '0')}`;\n}\n\nexport function zonedDateTimeToString(date: ZonedDateTime): string {\n  return `${dateTimeToString(date)}${offsetToString(date.offset)}[${date.timeZone}]`;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {add, addTime, addZoned, constrain, constrainTime, cycleDate, cycleTime, cycleZoned, set, setTime, setZoned, subtract, subtractTime, subtractZoned} from './manipulation';\nimport {AnyCalendarDate, AnyTime, Calendar, CycleOptions, CycleTimeOptions, DateField, DateFields, Disambiguation, Duration, TimeField, TimeFields} from './types';\nimport {compareDate, compareTime} from './queries';\nimport {dateTimeToString, dateToString, timeToString, zonedDateTimeToString} from './string';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {toCalendarDateTime, toDate, toZoned, zonedToDate} from './conversion';\n\nfunction shiftArgs(args: any[]) {\n  let calendar: Calendar = typeof args[0] === 'object'\n    ? args.shift()\n    : new GregorianCalendar();\n\n  let era: string;\n  if (typeof args[0] === 'string') {\n    era = args.shift();\n  } else {\n    let eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n\n  let year = args.shift();\n  let month = args.shift();\n  let day = args.shift();\n\n  return [calendar, era, year, month, day];\n}\n\nexport class CalendarDate {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n  // If that behavior is desired, use the AnyCalendarDate interface instead.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n\n  constructor(year: number, month: number, day: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n\n    constrain(this);\n  }\n\n  copy(): CalendarDate {\n    if (this.era) {\n      return new CalendarDate(this.calendar, this.era, this.year, this.month, this.day);\n    } else {\n      return new CalendarDate(this.calendar, this.year, this.month, this.day);\n    }\n  }\n\n  add(duration: Duration) {\n    return add(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtract(this, duration);\n  }\n\n  set(fields: DateFields) {\n    return set(this, fields);\n  }\n\n  cycle(field: DateField, amount: number, options?: CycleOptions) {\n    return cycleDate(this, field, amount, options);\n  }\n\n  toDate(timeZone: string) {\n    return toDate(this, timeZone);\n  }\n\n  toString() {\n    return dateToString(this);\n  }\n\n  compare(b: AnyCalendarDate) {\n    return compareDate(this, b);\n  }\n}\n\nexport class Time {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n\n  constructor(\n    public readonly hour: number = 0,\n    public readonly minute: number = 0,\n    public readonly second: number = 0,\n    public readonly millisecond: number = 0\n  ) {\n    constrainTime(this);\n  }\n\n  copy(): Time {\n    return new Time(this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  add(duration: Duration) {\n    return addTime(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtractTime(this, duration);\n  }\n\n  set(fields: TimeFields) {\n    return setTime(this, fields);\n  }\n\n  cycle(field: TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleTime(this, field, amount, options);\n  }\n\n  toString() {\n    return timeToString(this);\n  }\n\n  compare(b: AnyTime) {\n    return compareTime(this, b);\n  }\n}\n\nexport class CalendarDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n  public readonly hour: number;\n  public readonly minute: number;\n  public readonly second: number;\n  public readonly millisecond: number;\n\n  constructor(year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  copy(): CalendarDateTime {\n    if (this.era) {\n      return new CalendarDateTime(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new CalendarDateTime(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  add(duration: Duration) {\n    return add(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtract(this, duration);\n  }\n\n  set(fields: DateFields & TimeFields) {\n    return set(setTime(this, fields), fields);\n  }\n\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions) {\n    switch (field) {\n      case 'era':\n      case 'year':\n      case 'month':\n      case 'day':\n        return cycleDate(this, field, amount, options);\n      default:\n        return cycleTime(this, field, amount, options);\n    }\n  }\n\n  toDate(timeZone: string) {\n    return toDate(this, timeZone);\n  }\n\n  toString() {\n    return dateTimeToString(this);\n  }\n\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime) {\n    let res = compareDate(this, b);\n    if (res === 0) {\n      return compareTime(this, toCalendarDateTime(b));\n    }\n\n    return res;\n  }\n}\n\nexport class ZonedDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n  public readonly hour: number;\n  public readonly minute: number;\n  public readonly second: number;\n  public readonly millisecond: number;\n  public readonly timeZone: string;\n  public readonly offset: number;\n\n  constructor(year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    let timeZone = args.shift();\n    let offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  copy(): ZonedDateTime {\n    if (this.era) {\n      return new ZonedDateTime(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new ZonedDateTime(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  add(duration: Duration) {\n    return addZoned(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtractZoned(this, duration);\n  }\n\n  set(fields: DateFields & TimeFields, disambiguation?: Disambiguation) {\n    return setZoned(this, fields, disambiguation);\n  }\n\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleZoned(this, field, amount, options);\n  }\n\n  toDate() {\n    return zonedToDate(this);\n  }\n\n  toString() {\n    return zonedDateTimeToString(this);\n  }\n\n  toAbsoluteString() {\n    return this.toDate().toISOString();\n  }\n\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime) {\n    // TODO: Is this a bad idea??\n    return this.toDate().getTime() - toZoned(b, this.timeZone).toDate().getTime();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nconst ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nconst ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nconst ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction findEraFromGregorianDate(date: AnyCalendarDate) {\n  const idx = ERA_START_DATES.findIndex(([year, month, day]) => {\n    if (date.year < year) {\n      return true;\n    }\n\n    if (date.year === year && date.month < month) {\n      return true;\n    }\n\n    if (date.year === year && date.month === month && date.day < day) {\n      return true;\n    }\n\n    return false;\n  });\n\n  if (idx === -1) {\n    return ERA_START_DATES.length - 1;\n  }\n\n  if (idx === 0) {\n    return 0;\n  }\n\n  return idx - 1;\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let eraAddend = ERA_ADDENDS[ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) {\n    throw new Error('Unknown era: ' + date.era);\n  }\n\n  return new CalendarDate(\n    date.year + eraAddend,\n    date.month,\n    date.day\n  );\n}\n\nexport class JapaneseCalendar extends GregorianCalendar {\n  identifier = 'japanese';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n\n    let era = findEraFromGregorianDate(date);\n    date.era = ERA_NAMES[era];\n    date.year -= ERA_ADDENDS[era];\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    let gregorianDate = toGregorian(date);\n    let era = findEraFromGregorianDate(gregorianDate);\n\n    if (ERA_NAMES[era] !== date.era) {\n      date.era = ERA_NAMES[era];\n      date.year = gregorianDate.year - ERA_ADDENDS[era];\n    }\n  }\n\n  constrainDate(date: Mutable<AnyCalendarDate>) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    let end = ERA_END_DATES[idx];\n    if (end != null) {\n      let [endYear, endMonth, endDay] = end;\n\n      // Constrain the year to the maximum possible value in the era.\n      // Then constrain the month and day fields within that.\n      let maxYear = endYear - ERA_ADDENDS[idx];\n      date.year = Math.min(maxYear, date.year);\n      if (date.year === maxYear) {\n        date.month = Math.min(endMonth, date.month);\n\n        if (date.month === endMonth) {\n          date.day = Math.min(endDay, date.day);\n        }\n      }\n\n      if (date.year === 1) {\n        let [, startMonth, startDay] = ERA_START_DATES[idx];\n        date.month = Math.max(startMonth, date.month);\n\n        if (date.month === startMonth) {\n          date.day = Math.max(startDay, date.day);\n        }\n      }\n    }\n  }\n\n  getEras() {\n    return ERA_NAMES;\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // Get the number of years in the era, taking into account the date's month and day fields.\n    let era = ERA_NAMES.indexOf(date.era);\n    let next = ERA_START_DATES[era + 1];\n    if (next == null) {\n      return 9999;\n    }\n\n    let cur = ERA_START_DATES[era];\n    let years = next[0] - cur[0];\n\n    if (date.month < next[1] || (date.month === next[1] && date.day < next[2])) {\n      years++;\n    }\n\n    return years;\n  }\n\n  getMinimumMonthInYear(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start ? start[1] : 1;\n  }\n\n  getMinimumDayInMonth(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start && date.month === start[1] ? start[2] : 1;\n  }\n}\n\nfunction getMinimums(date: AnyCalendarDate) {\n  if (date.year === 1) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    return ERA_START_DATES[idx];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst BUDDHIST_ERA_START = -543;\n\nexport class BuddhistCalendar extends GregorianCalendar {\n  identifier = 'buddhist';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n    date.year -= BUDDHIST_ERA_START;\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(\n      new CalendarDate(\n        date.year + BUDDHIST_ERA_START,\n        date.month,\n        date.day\n      )\n    );\n  }\n\n  getEras() {\n    return ['BE'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst TAIWAN_ERA_START = 1911;\n\nfunction gregorianYear(date: AnyCalendarDate) {\n  return date.era === 'minguo'\n    ? date.year + TAIWAN_ERA_START\n    : 1 - date.year + TAIWAN_ERA_START;\n}\n\nfunction gregorianToTaiwan(year: number, date: Mutable<AnyCalendarDate>) {\n  let y = year - TAIWAN_ERA_START;\n  if (y > 0) {\n    date.era = 'minguo';\n    date.year = y;\n  } else {\n    date.era = 'before_minguo';\n    date.year = 1 - y;\n  }\n}\n\nexport class TaiwanCalendar extends GregorianCalendar {\n  identifier = 'roc'; // Republic of China\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date: Mutable<CalendarDate> = super.fromJulianDay(jd);\n    gregorianToTaiwan(date.year, date);\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(\n      new CalendarDate(\n        gregorianYear(date),\n        date.month,\n        date.day\n      )\n    );\n  }\n\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    gregorianToTaiwan(gregorianYear(date), date);\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'before_minguo' ? -years : years;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod} from '../utils';\n\nconst PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.\n\nfunction isLeapYear(year: number): boolean {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n\n  return mod((y1 + 38) * 31, 128) < 31;\n}\n\nfunction persianToJulianDay(year: number, month: number, day: number): number {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;\n\n  return (\n    PERSIAN_EPOCH -\n    1 +\n    1029983 * Math.floor(y0 / 2820) +\n    365 * (y1 - 1) +\n    Math.floor((31 * y1 - 5) / 128) +\n    offset +\n    day\n  );\n}\n\nexport class PersianCalendar implements Calendar {\n  identifier = 'persian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d0 = jd - persianToJulianDay(475, 1, 1);\n    let n2820 = Math.floor(d0 / 1029983);\n    let d1 = mod(d0, 1029983);\n    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);\n    let year = 474 + 2820 * n2820 + y2820;\n    if (year <= 0) {\n      year--;\n    }\n\n    let yDay = jd - persianToJulianDay(year, 1, 1) + 1;\n    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);\n    let day = jd - persianToJulianDay(year, month, 1) + 1;\n\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return persianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month <= 6) {\n      return 31;\n    }\n\n    if (date.month <= 11) {\n      return 30;\n    }\n\n    return isLeapYear(date.year) ? 30 : 29;\n  }\n\n  getEras() {\n    return ['AP'];\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar, gregorianToJulianDay, isLeapYear} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\n// Starts in 78 AD,\nconst INDIAN_ERA_START = 78;\n\n// The Indian year starts 80 days later than the Gregorian year.\nconst INDIAN_YEAR_START = 80;\n\nexport class IndianCalendar extends GregorianCalendar {\n  identifier = 'indian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    // Gregorian date for Julian day\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n\n    // Year in Saka era\n    let indianYear = date.year - INDIAN_ERA_START;\n\n    // Day number in Gregorian year (starting from 0)\n    let yDay = jd - gregorianToJulianDay(date.year, 1, 1);\n\n    let leapMonth: number;\n    if (yDay < INDIAN_YEAR_START) {\n      //  Day is at the end of the preceding Saka year\n      indianYear--;\n\n      // Days in leapMonth this year, previous Gregorian year\n      leapMonth = isLeapYear(date.year - 1) ? 31 : 30;\n      yDay += leapMonth + (31 * 5) + (30 * 3) + 10;\n    } else {\n      // Days in leapMonth this year\n      leapMonth = isLeapYear(date.year) ? 31 : 30;\n      yDay -= INDIAN_YEAR_START;\n    }\n\n    let indianMonth: number;\n    let indianDay: number;\n    if (yDay < leapMonth) {\n      indianMonth = 1;\n      indianDay = yDay + 1;\n    } else {\n      let mDay = yDay - leapMonth;\n      if (mDay < (31 * 5)) {\n        indianMonth = Math.floor(mDay / 31) + 2;\n        indianDay = (mDay % 31) + 1;\n      } else {\n        mDay -= 31 * 5;\n        indianMonth = Math.floor(mDay / 30) + 7;\n        indianDay = (mDay % 30) + 1;\n      }\n    }\n\n    return new CalendarDate(this, indianYear, indianMonth, indianDay);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year + INDIAN_ERA_START;\n\n    let leapMonth: number;\n    let jd: number;\n    if (isLeapYear(year)) {\n      leapMonth = 31;\n      jd = gregorianToJulianDay(year, 3, 21);\n    } else {\n      leapMonth = 30;\n      jd = gregorianToJulianDay(year, 3, 22);\n    }\n\n    if (date.month === 1) {\n      return jd + date.day - 1;\n    }\n\n    jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n\n    if (date.month >= 8) {\n      jd += (date.month - 7) * 30;\n    }\n\n    jd += date.day - 1;\n    return jd;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month === 1 && isLeapYear(date.year + INDIAN_ERA_START)) {\n      return 31;\n    }\n\n    if (date.month >= 2 && date.month <= 6) {\n      return 31;\n    }\n\n    return 30;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['saka'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\n\nconst CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\nconst ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\nconst UMALQURA_YEAR_START = 1300;\nconst UMALQURA_YEAR_END = 1600;\nconst UMALQURA_START_DAYS = 460322;\n\nfunction islamicToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return day +\n    Math.ceil(29.5 * (month - 1)) +\n    (year - 1) * 354 +\n    Math.floor((3 + 11 * year) / 30) +\n    epoch - 1;\n}\n\nfunction julianDayToIslamic(calendar: Calendar, epoch: number, jd: number) {\n  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  let month = Math.min(12, Math.ceil((jd - (29 + islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  let day = jd - islamicToJulianDay(epoch, year, month, 1) + 1;\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction isLeapYear(year: number): boolean {\n  return (14 + 11 * year) % 30 < 11;\n}\n\nexport class IslamicCivilCalendar implements Calendar {\n  identifier = 'islamic-civil';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, CIVIL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(CIVIL_EPOC, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let length = 29 + date.month % 2;\n    if (date.month === 12 && isLeapYear(date.year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 355 : 354;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AH'];\n  }\n}\n\nexport class IslamicTabularCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-tbla';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, ASTRONOMICAL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n  }\n}\n\n// Generated by scripts/generate-umalqura.js\nconst UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nlet UMALQURA_MONTHLENGTH: Uint16Array;\nlet UMALQURA_YEAR_START_TABLE: Uint32Array;\n\nfunction umalquraYearStart(year: number): number {\n  return UMALQURA_START_DAYS + UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nfunction umalquraMonthLength(year: number, month: number): number {\n  let idx = (year - UMALQURA_YEAR_START);\n  let mask = (0x01 << (11 - (month - 1)));\n  if ((UMALQURA_MONTHLENGTH[idx] & mask) === 0) {\n    return 29;\n  } else {\n    return 30;\n  }\n}\n\nfunction umalquraMonthStart(year: number, month: number): number {\n  let day = umalquraYearStart(year);\n  for (let i = 1; i < month; i++) {\n    day += umalquraMonthLength(year, i);\n  }\n  return day;\n}\n\nfunction umalquraYearLength(year: number): number {\n  return UMALQURA_YEAR_START_TABLE[year + 1 - UMALQURA_YEAR_START] - UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nexport class IslamicUmalquraCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-umalqura';\n\n  constructor() {\n    super();\n    if (!UMALQURA_MONTHLENGTH) {\n      UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob(UMALQURA_DATA), c => c.charCodeAt(0)).buffer);\n    }\n\n    if (!UMALQURA_YEAR_START_TABLE) {\n      UMALQURA_YEAR_START_TABLE = new Uint32Array(UMALQURA_YEAR_END - UMALQURA_YEAR_START + 1);\n\n      let yearStart = 0;\n      for (let year = UMALQURA_YEAR_START; year <= UMALQURA_YEAR_END; year++) {\n        UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START] = yearStart;\n        for (let i = 1; i <= 12; i++) {\n          yearStart += umalquraMonthLength(year, i);\n        }\n      }\n    }\n  }\n\n  fromJulianDay(jd: number): CalendarDate {\n    let days = jd - CIVIL_EPOC;\n    let startDays = umalquraYearStart(UMALQURA_YEAR_START);\n    let endDays = umalquraYearStart(UMALQURA_YEAR_END);\n    if (days < startDays || days > endDays) {\n      return super.fromJulianDay(jd);\n    } else {\n      let y = UMALQURA_YEAR_START - 1;\n      let m = 1;\n      let d = 1;\n      while (d > 0) {\n        y++;\n        d = days - umalquraYearStart(y) + 1;\n        let yearLength = umalquraYearLength(y);\n        if (d === yearLength) {\n          m = 12;\n          break;\n        } else if (d < yearLength) {\n          let monthLength = umalquraMonthLength(y, m);\n          m = 1;\n          while (d > monthLength) {\n            d -= monthLength;\n            m++;\n            monthLength = umalquraMonthLength(y, m);\n          }\n          break;\n        }\n      }\n\n      return new CalendarDate(this, y, m, (days - umalquraMonthStart(y, m) + 1));\n    }\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.toJulianDay(date);\n    }\n\n    return CIVIL_EPOC + umalquraMonthStart(date.year, date.month) + (date.day - 1);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInMonth(date);\n    }\n\n    return umalquraMonthLength(date.year, date.month);\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInYear(date);\n    }\n\n    return umalquraYearLength(date.year);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst HEBREW_EPOCH = 347997;\n\n// Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\nconst HOUR_PARTS = 1080;\nconst DAY_PARTS  = 24 * HOUR_PARTS;\n\n// An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\nconst MONTH_DAYS = 29;\nconst MONTH_FRACT = 12 * HOUR_PARTS + 793;\nconst MONTH_PARTS = MONTH_DAYS * DAY_PARTS + MONTH_FRACT;\n\nfunction isLeapYear(year: number) {\n  return mod(year * 7 + 1, 19) < 7;\n}\n\n// Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\nfunction hebrewDelay1(year: number) {\n  let months = Math.floor((235 * year - 234) / 19);\n  let parts = 12084 + 13753 * months;\n  let day = months * 29 + Math.floor(parts / 25920);\n\n  if (mod(3 * (day + 1), 7) < 3) {\n    day += 1;\n  }\n\n  return day;\n}\n\n// Check for delay in start of new year due to length of adjacent years\nfunction hebrewDelay2(year: number) {\n  let last = hebrewDelay1(year - 1);\n  let present = hebrewDelay1(year);\n  let next = hebrewDelay1(year + 1);\n\n  if (next - present === 356) {\n    return 2;\n  }\n\n  if (present - last === 382) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction startOfYear(year: number) {\n  return hebrewDelay1(year) + hebrewDelay2(year);\n}\n\nfunction getDaysInYear(year: number) {\n  return startOfYear(year + 1) - startOfYear(year);\n}\n\nfunction getYearType(year: number) {\n  let yearLength = getDaysInYear(year);\n\n  if (yearLength > 380) {\n    yearLength -= 30; // Subtract length of leap month.\n  }\n\n  switch (yearLength) {\n    case 353:\n      return 0; // deficient\n    case 354:\n      return 1; // normal\n    case 355:\n      return 2; // complete\n  }\n}\n\nfunction getDaysInMonth(year: number, month: number): number {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !isLeapYear(year)) {\n    month++;\n  }\n\n  // First of all, dispose of fixed-length 29 day months\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) {\n    return 29;\n  }\n\n  let yearType = getYearType(year);\n\n  // If it's Heshvan, days depend on length of year\n  if (month === 2) {\n    return yearType === 2 ? 30 : 29;\n  }\n\n  // Similarly, Kislev varies with the length of year\n  if (month === 3) {\n    return yearType === 0 ? 29 : 30;\n  }\n\n  // Adar I only exists in leap years\n  if (month === 6) {\n    return isLeapYear(year) ? 30 : 0;\n  }\n\n  return 30;\n}\n\nexport class HebrewCalendar implements Calendar {\n  identifier = 'hebrew';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d = jd - HEBREW_EPOCH;\n    let m = (d * DAY_PARTS) / MONTH_PARTS;           // Months (approx)\n    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n    let ys = startOfYear(year);                      // 1st day of year\n    let dayOfYear = Math.floor(d - ys);\n\n    // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n    while (dayOfYear < 1) {\n      year--;\n      ys = startOfYear(year);\n      dayOfYear = Math.floor(d - ys);\n    }\n\n    // Now figure out which month we're in, and the date within that month\n    let month = 1;\n    let monthStart = 0;\n    while (monthStart < dayOfYear) {\n      monthStart += getDaysInMonth(year, month);\n      month++;\n    }\n\n    month--;\n    monthStart -= getDaysInMonth(year, month);\n\n    let day = dayOfYear - monthStart;\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let jd = startOfYear(date.year);\n    for (let month = 1; month < date.month; month++) {\n      jd += getDaysInMonth(date.year, month);\n    }\n\n    return jd + date.day + HEBREW_EPOCH;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 13 : 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return getDaysInYear(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AM'];\n  }\n\n  balanceYearMonth(date: Mutable<AnyCalendarDate>, previousDate: AnyCalendarDate) {\n    // Keep date in the same month when switching between leap years and non leap years\n    if (previousDate.year !== date.year) {\n      if (isLeapYear(previousDate.year) && !isLeapYear(date.year) && previousDate.month > 6) {\n        date.month--;\n      } else if (!isLeapYear(previousDate.year) && isLeapYear(date.year) && previousDate.month > 6) {\n        date.month++;\n      }\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {Mutable} from '../utils';\n\nconst ETHIOPIC_EPOCH = 1723856;\nconst COPTIC_EPOCH = 1824665;\n\n// The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\nconst AMETE_MIHRET_DELTA = 5500;\n\nfunction ceToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return (\n    epoch                   // difference from Julian epoch to 1,1,1\n    + 365 * year            // number of days from years\n    + Math.floor(year / 4)  // extra day of leap year\n    + 30 * (month - 1)      // number of days from months (1 based)\n    + day - 1               // number of days for present month (1 based)\n  );\n}\n\nfunction julianDayToCE(calendar: Calendar, epoch: number, jd: number): Mutable<CalendarDate> {\n  let year = Math.floor((4 * (jd - epoch)) / 1461);\n  let month = 1 + Math.floor((jd - ceToJulianDay(epoch, year, 1, 1)) / 30);\n  let day = jd + 1 - ceToJulianDay(epoch, year, month, 1);\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction getLeapDay(year: number) {\n  return Math.floor((year % 4) / 3);\n}\n\nfunction getDaysInMonth(year: number, month: number) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) {\n    // not intercalary month\n    return 30;\n  } else {\n    // intercalary month 5 days + possible leap day\n    return getLeapDay(year) + 5;\n  }\n}\n\nexport class EthiopicCalendar implements Calendar {\n  identifier = 'ethiopic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    if (date.year > 0) {\n      date.era = 'AM';\n    } else {\n      date.era = 'AA';\n      date.year += AMETE_MIHRET_DELTA;\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return ceToJulianDay(ETHIOPIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getMonthsInYear(): number {\n    return 13;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return 365 + getLeapDay(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AA', 'AM'];\n  }\n}\n\nexport class EthiopicAmeteAlemCalendar extends EthiopicCalendar {\n  identifier = 'ethioaa'; // also known as 'ethiopic-amete-alem' in ICU\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    date.era = 'AA';\n    date.year += AMETE_MIHRET_DELTA;\n    return date as CalendarDate;\n  }\n\n  getEras() {\n    return ['AA'];\n  }\n}\n\nexport class CopticCalendar extends EthiopicCalendar {\n  identifier = 'coptic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, COPTIC_EPOCH, jd);\n    if (date.year <= 0) {\n      date.era = 'BCE';\n      date.year = 1 - date.year;\n    } else {\n      date.era = 'CE';\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return ceToJulianDay(COPTIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BCE' ? -years : years;\n  }\n\n  getEras() {\n    return ['BCE', 'CE'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BuddhistCalendar} from './calendars/BuddhistCalendar';\nimport {Calendar} from './types';\nimport {CopticCalendar, EthiopicAmeteAlemCalendar, EthiopicCalendar} from './calendars/EthiopicCalendar';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {HebrewCalendar} from './calendars/HebrewCalendar';\nimport {IndianCalendar} from './calendars/IndianCalendar';\nimport {IslamicCivilCalendar, IslamicTabularCalendar, IslamicUmalquraCalendar} from './calendars/IslamicCalendar';\nimport {JapaneseCalendar} from './calendars/JapaneseCalendar';\nimport {PersianCalendar} from './calendars/PersianCalendar';\nimport {TaiwanCalendar} from './calendars/TaiwanCalendar';\n\nexport function createCalendar(name: string): Calendar {\n  switch (name) {\n    case 'buddhist':\n      return new BuddhistCalendar();\n    case 'ethiopic':\n      return new EthiopicCalendar();\n    case 'ethioaa':\n      return new EthiopicAmeteAlemCalendar();\n    case 'coptic':\n      return new CopticCalendar();\n    case 'hebrew':\n      return new HebrewCalendar();\n    case 'indian':\n      return new IndianCalendar();\n    case 'islamic-civil':\n      return new IslamicCivilCalendar();\n    case 'islamic-tbla':\n      return new IslamicTabularCalendar();\n    case 'islamic-umalqura':\n      return new IslamicUmalquraCalendar();\n    case 'japanese':\n      return new JapaneseCalendar();\n    case 'persian':\n      return new PersianCalendar();\n    case 'roc':\n      return new TaiwanCalendar();\n    case 'gregory':\n    default:\n      return new GregorianCalendar();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet formatterCache = new Map<string, Intl.DateTimeFormat>();\n\ninterface ResolvedDateTimeFormatOptions extends Intl.ResolvedDateTimeFormatOptions {\n  hourCycle?: Intl.DateTimeFormatOptions['hourCycle']\n}\n\ninterface DateRangeFormatPart extends Intl.DateTimeFormatPart {\n  source: 'startRange' | 'endRange' | 'shared'\n}\n\nexport class DateFormatter implements Intl.DateTimeFormat {\n  private formatter: Intl.DateTimeFormat;\n  private options: Intl.DateTimeFormatOptions;\n  private resolvedHourCycle: Intl.DateTimeFormatOptions['hourCycle'];\n\n  constructor(locale: string, options: Intl.DateTimeFormatOptions = {}) {\n    this.formatter = getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n  format(value: Date): string {\n    return this.formatter.format(value);\n  }\n\n  formatToParts(value: Date): Intl.DateTimeFormatPart[] {\n    return this.formatter.formatToParts(value);\n  }\n\n  formatRange(start: Date, end: Date): string {\n    // @ts-ignore\n    if (typeof this.formatter.formatRange === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRange(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    // Very basic fallback for old browsers.\n    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;\n  }\n\n  formatRangeToParts(start: Date, end: Date): DateRangeFormatPart[] {\n    // @ts-ignore\n    if (typeof this.formatter.formatRangeToParts === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRangeToParts(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    let startParts = this.formatter.formatToParts(start);\n    let endParts = this.formatter.formatToParts(end);\n    return [\n      ...startParts.map(p => ({...p, source: 'startRange'} as DateRangeFormatPart)),\n      {type: 'literal', value: ' – ', source: 'shared'},\n      ...endParts.map(p => ({...p, source: 'endRange'} as DateRangeFormatPart))\n    ];\n  }\n\n  resolvedOptions(): ResolvedDateTimeFormatOptions {\n    let resolvedOptions = this.formatter.resolvedOptions() as ResolvedDateTimeFormatOptions;\n    if (hasBuggyResolvedHourCycle()) {\n      if (!this.resolvedHourCycle) {\n        this.resolvedHourCycle = getResolvedHourCycle(resolvedOptions.locale, this.options);\n      }\n      resolvedOptions.hourCycle = this.resolvedHourCycle;\n      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n    }\n\n    return resolvedOptions;\n  }\n}\n\n// There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\nconst hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {\n    // All locales use h23 for 24 hour time. None use h24.\n  }\n};\n\nfunction getCachedDateFormatter(locale: string, options: Intl.DateTimeFormatOptions = {}): Intl.DateTimeFormat {\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && hasBuggyHour12Behavior()) {\n    options = {...options};\n    let pref = hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref ?? defaultHourCycle;\n    delete options.hour12;\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey);\n  }\n\n  let numberFormatter = new Intl.DateTimeFormat(locale, options);\n  formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nlet _hasBuggyHour12Behavior: boolean = null;\nfunction hasBuggyHour12Behavior() {\n  if (_hasBuggyHour12Behavior == null) {\n    _hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      hour12: false\n    }).format(new Date(2020, 2, 3, 0)) === '24';\n  }\n\n  return _hasBuggyHour12Behavior;\n}\n\nlet _hasBuggyResolvedHourCycle: boolean = null;\nfunction hasBuggyResolvedHourCycle() {\n  if (_hasBuggyResolvedHourCycle == null) {\n    _hasBuggyResolvedHourCycle = (new Intl.DateTimeFormat('fr', {\n      hour: 'numeric',\n      hour12: false\n    }).resolvedOptions() as ResolvedDateTimeFormatOptions).hourCycle === 'h12';\n  }\n\n  return _hasBuggyResolvedHourCycle;\n}\n\nfunction getResolvedHourCycle(locale: string, options: Intl.DateTimeFormatOptions) {\n  if (!options.timeStyle && !options.hour) {\n    return undefined;\n  }\n\n  // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  let formatter = getCachedDateFormatter(locale, {\n    ...options,\n    timeZone: undefined // use local timezone\n  });\n\n  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour').value, 10);\n  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour').value, 10);\n\n  if (min === 0 && max === 23) {\n    return 'h23';\n  }\n\n  if (min === 24 && max === 23) {\n    return 'h24';\n  }\n\n  if (min === 0 && max === 11) {\n    return 'h11';\n  }\n\n  if (min === 12 && max === 11) {\n    return 'h12';\n  }\n\n  throw new Error('Unexpected hour cycle result');\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","weekStartData","AD","AE","AF","AI","AL","AM","AN","AT","AX","AZ","BA","BE","BG","BH","BM","BN","BY","CH","CL","CM","CR","CY","CZ","DE","DJ","DK","DZ","EC","EE","EG","ES","FI","FJ","FO","FR","GB","GE","GF","GP","GR","HR","HU","IE","IQ","IR","IS","IT","JO","KG","KW","KZ","LB","LI","LK","LT","LU","LV","LY","MC","MD","ME","MK","MN","MQ","MV","MY","NL","NO","NZ","OM","PL","QA","RE","RO","RS","RU","SD","SE","SI","SK","SM","SY","TJ","TM","TR","UA","UY","UZ","VA","VN","XK","isSameDay","b","calendar","era","year","month","day","isSameMonth","startOfMonth","isSameYear","startOfYear","isEqualDay","identifier","isEqualMonth","isEqualYear","isToday","date","timeZone","today","getDayOfWeek","locale","julian","toJulianDay","dayOfWeek","Math","ceil","getWeekStart","now","Date","compareDate","compareTime","timeToMs","hour","minute","second","millisecond","getHoursInDay","ms","tomorrow","add","days","tomorrowMs","localTimeZone","getLocalTimeZone","Intl","DateTimeFormat","resolvedOptions","subtract","endOfMonth","getDaysInMonth","months","endOfYear","getMonthsInYear","getMinimumMonthInYear","getMinimumDayInMonth","startOfWeek","endOfWeek","cachedRegions","Map","getRegion","Locale","region","get","maximize","set","part","split","getWeeksInMonth","minDate","compare","maxDate","mod","amount","numerator","floor","EPOCH","gregorianToJulianDay","y1","monthOffset","isLeapYear","daysInMonth","standard","leapyear","GregorianCalendar","fromJulianDay","jd","jd0","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearDay","leapAdj","getDaysInYear","getYearsInEra","getEras","getYearsToAdd","years","balanceDate","epochFromDate","toCalendar","epochFromParts","setUTCHours","setUTCFullYear","getTime","getTimeZoneOffset","getTimezoneOffset","getTimeZoneParts","utc","formattersByTimeZone","formatter","hour12","parts","formatToParts","namedParts","type","value","DAYMILLIS","possibleAbsolutes","earlier","later","getValidWallTimes","found","filter","absolute","isValidWallTime","toAbsolute","disambiguation","dateTime","toCalendarDateTime","setFullYear","setHours","offsetBefore","offsetAfter","valid","length","RangeError","min","max","toDate","fromAbsolute","offset","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","fromDate","fromDateToLocal","toCalendarDate","toDateFields","toTimeFields","time","toTime","calendarDate","copy","toZoned","toTimeZone","zonedToDate","toLocalTimeZone","ONE_HOUR","duration","mutableDate","addTimeFields","addYears","balanceYearMonth","constrainMonthDay","weeks","balanceDay","monthsInYear","constrain","constrainDate","invertDuration","inverseDuration","key","fields","setTime","mutableValue","constrainTime","balanceTime","nonNegativeMod","result","hours","minutes","seconds","milliseconds","addTime","res","subtractTime","cycleDate","field","options","mutable","eras","eraIndex","indexOf","Error","cycleValue","round","Infinity","cycleTime","hourCycle","isPM","sign","div","abs","addZoned","subtractZoned","cycleZoned","plainDateTime","minAbsolute","maxAbsolute","pop","remainder","setZoned","TIME_RE","DATE_RE","DATE_TIME_RE","ZONED_DATE_TIME_RE","ABSOLUTE_RE","parseTime","m","match","parseNumber","parseDate","parseDateTime","parseZonedDateTime","absolutes","includes","offsetToString","dateTimeToString","parseAbsolute","parseAbsoluteToLocal","val","Number","timeToString","String","padStart","slice","dateToString","gregorianDate","offsetHours","offsetMinutes","zonedDateTimeToString","shiftArgs","args","shift","CalendarDate","constructor","cycle","toString","Time","CalendarDateTime","ZonedDateTime","toAbsoluteString","toISOString","ERA_START_DATES","ERA_END_DATES","ERA_ADDENDS","ERA_NAMES","findEraFromGregorianDate","idx","findIndex","toGregorian","eraAddend","JapaneseCalendar","end","endYear","endMonth","endDay","maxYear","startMonth","startDay","next","cur","start","getMinimums","BUDDHIST_ERA_START","BuddhistCalendar","TAIWAN_ERA_START","gregorianYear","gregorianToTaiwan","y","TaiwanCalendar","PERSIAN_EPOCH","y0","persianToJulianDay","PersianCalendar","d0","n2820","d1","y2820","yDay","INDIAN_ERA_START","INDIAN_YEAR_START","IndianCalendar","indianYear","leapMonth","indianMonth","indianDay","mDay","CIVIL_EPOC","ASTRONOMICAL_EPOC","UMALQURA_YEAR_START","UMALQURA_YEAR_END","UMALQURA_START_DAYS","islamicToJulianDay","epoch","julianDayToIslamic","IslamicCivilCalendar","IslamicTabularCalendar","UMALQURA_DATA","UMALQURA_MONTHLENGTH","UMALQURA_YEAR_START_TABLE","umalquraYearStart","umalquraMonthLength","mask","umalquraMonthStart","i","umalquraYearLength","IslamicUmalquraCalendar","Uint16Array","Uint8Array","from","atob","c","charCodeAt","buffer","Uint32Array","yearStart","startDays","endDays","d","yearLength","monthLength","HEBREW_EPOCH","HOUR_PARTS","DAY_PARTS","MONTH_DAYS","MONTH_FRACT","MONTH_PARTS","hebrewDelay1","hebrewDelay2","last","present","getYearType","yearType","HebrewCalendar","ys","dayOfYear","monthStart","previousDate","ETHIOPIC_EPOCH","COPTIC_EPOCH","AMETE_MIHRET_DELTA","ceToJulianDay","julianDayToCE","getLeapDay","EthiopicCalendar","EthiopicAmeteAlemCalendar","CopticCalendar","createCalendar","name","formatterCache","DateFormatter","resolvedHourCycle","getCachedDateFormatter","format","formatRange","formatRangeToParts","startParts","endParts","map","p","source","hasBuggyResolvedHourCycle","getResolvedHourCycle","hour12Preferences","true","ja","false","hasBuggyHour12Behavior","pref","defaultHourCycle","cacheKey","Object","entries","sort","join","has","numberFormatter","_hasBuggyHour12Behavior","_hasBuggyResolvedHourCycle","timeStyle","undefined","replace","parseInt","find"],"version":3,"file":"main.js.map"}